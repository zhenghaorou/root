构建新的教学环境
1.构建两台虚拟机,操作系统为CentOS7.5
[student@room9pc01 ~]$ clone-vm7 
Enter VM number: 8
Creating Virtual Machine disk image......	[OK]
Defining new virtual machine......	[OK]
[student@room9pc01 ~]$ clone-vm7 
Enter VM number: 9
Creating Virtual Machine disk image......	[OK]
Defining new virtual machine......	[OK]

#修改两台虚拟机名为A与B

2.利用root进入两台虚拟机,密码为:123456

3.配置永久主机名                                         
    虚拟机A:svr7.tedu.cn
    虚拟机B:pc207.tedu.cn

4.配置IP地址
    虚拟机A:为eth0配置 192.168.4.7/24
    虚拟机B:为eth0配置 192.168.4.207/24

5.利用真机进行远程管理两台虚拟机
[student@room9pc01 ~]$ ping 192.168.4.7
[student@room9pc01 ~]$ ping 192.168.4.207

[student@room9pc01 ~]$ ssh -X root@192.168.4.7
[student@room9pc01 ~]$ ssh -X root@192.168.4.207

6.为真机上设置永久别名
[student@room9pc01 ~]$ vim /home/student/.bashrc 
 alias goa='ssh  -X  root@192.168.4.7'
 alias gob='ssh  -X  root@192.168.4.207'

 新开一个终端验证

7.构建Yum仓库

服务端:真机构建FTP服务器,共享光盘所有内容
 1)真机检测软件包vsftpd的安装
 [student@room9pc01 ~]$ rpm -q vsftpd
 vsftpd-3.0.2-22.el7.x86_64
 [student@room9pc01 ~]$ systemctl status vsftpd
 2)共享光盘所有内容
    默认共享的路径:/var/ftp
 ]$ mkdir /var/ftp/centos-1804/
 ]$ mount /iso/CentOS7-1804.iso   /var/ftp/centos-1804/
 ]$ ls /var/ftp/centos-1804/
 ]$ vim /etc/fstab 
/var/lib/libvirt/images/iso/CentOS7-1804.iso  /var/ftp/centos-1804 iso9660 defaults 0 0
 ]$ firefox ftp://192.168.4.254/centos-1804

客户端:两台虚拟机
[root@svr7 ~]# vim /etc/yum.repos.d/local.repo
[local_repo]
name=CentOS-$releasever - Base
baseurl="ftp://192.168.4.254/centos-1804"
enabled=1
gpgcheck=0
[root@svr7 ~]# yum -y install httpd

#####################################################
虚拟机C
 1.配置主机名为:svr10.tedu.cn
 2.配置eth0的IP地址:192.168.4.10/24
 3.配置Yum仓库,指向服务端为真机的FTP服务

虚拟机D
 1.配置主机名为:pc20.tedu.cn
 2.配置eth0的IP地址:192.168.4.20/24
 3.配置Yum仓库,指向服务端为真机的FTP服务

##################################################
扩展的几个应用
目录结构
• 认识Linux的目录层次:               
– man hier

• 常见一级目录的用途
	/boot 存放系统引导必需的文件,包括内核、启动配置
	/bin、/sbin 存放各种命令程序
	/dev 存放硬盘、键盘、鼠标、光驱等各种设备文件
	/etc 存放Linux系统及各种程序的配置文件
	/root、/home/用户名 分别是管理员root、普通用户的默认家目录
	/var 存放日志文件、邮箱目录等经常变化的文件
	/proc 存放内存中的映射数据,不占用磁盘
	/tmp 存放系统运行过程中使用的一些临时文件
[root@svr7 ~]# ls -ld /tmp
drwxrwxrwt. 8 root root 172 7月  15 10:34 /tmp

权限的数值表示
• 权限的数值化
– 基本权限:r = 4,w = 2,x = 1
– 附加权限:SUID = 4,SGID = 2,Sticky Bit = 1 

[root@svr7 ~]# mkdir /nsd01
[root@svr7 ~]# ls -ld /nsd01
[root@svr7 ~]# chmod 750 /nsd01
[root@svr7 ~]# ls -ld /nsd01

[root@svr7 ~]# chmod 700 /nsd01
[root@svr7 ~]# ls -ld /nsd01

[root@svr7 ~]# chmod 007 /nsd01
[root@svr7 ~]# ls -ld /nsd01

[root@svr7 ~]# chmod 755 /nsd01
[root@svr7 ~]# ls -ld /nsd01


历史命令
• 管理/调用曾经执行过的命令
– history:查看历史命令列表
– history -c:清空历史命令
– !n:执行命令历史中的第n条命令
– !str:执行最近一次以str开头的历史命令

• 调整历史命令的数量
[root@svr7 ~]# vim /etc/profile
HISTSIZE=1000  //默认记录1000条

[root@svr7 ~]# history        #显示历史命令列表
[root@svr7 ~]# history -c     #清空所有的历史命令
[root@svr7 ~]# history 
    1  history 
[root@svr7 ~]# cat -n /etc/redhat-release  
[root@svr7 ~]# ls /root/
[root@svr7 ~]# cat /etc/hosts

[root@svr7 ~]# history 
[root@svr7 ~]# !cat    #执行临时命令中最近以cat开头的命令
[root@svr7 ~]# !ls


实用小命令工具
• du,统计文件的占用空间
– du [选项]... [目录或文件]...
– -s:只统计每个参数所占用的总空间大小
– -h:提供易读容量单位(K、M等)

[root@svr7 ~]# du   -sh  /root
[root@svr7 ~]# du   -sh  /root/  /etc/  /boot/
[root@svr7 ~]# du   -sh  /

[root@svr7 ~]# du   -sh  /var

[root@svr7 ~]# du   -sh  /home
[root@svr7 ~]# du   -sh  /tmp


• date,查看/调整系统日期时间
– date +%F、date +%R
– date +"%Y-%m-%d %H:%M:%S"
– date -s "yyyy-mm-dd HH:MM:SS"

[root@svr7 ~]# date +%F   #显示  年-月-日
2019-07-15
[root@svr7 ~]# date +%Y   #显示 年
2019
[root@svr7 ~]# date +%m   #显示 月
07
[root@svr7 ~]# date +%d   #显示 日期
15
[root@svr7 ~]# date +%H   #显示 时
11
[root@svr7 ~]# date +%M   #显示 分
42
[root@svr7 ~]# date +%S   #显示 秒
####################################################

制作快捷方式    制作连接(链接)文件

制作软连接
格式: ln  -s  /路径/源文件   /路径/快捷方式名     #必须时绝对路径

]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
]# ln -s /etc/sysconfig/network-scripts/ifcfg-eth0   /etc/net0

]# ls /etc/net0 
]# cat /etc/net0
]# ls -l /etc/net0

]# ln -s /etc/passwd  /opt/
]# ls /opt/
]# ls -l /opt/passwd 

软连接特点:
若原始文件或目录被删除,连接文件将失效
软连接可存放在不同分区/文件系统

硬连接特点:
若原始文件被删除,连接文件仍可用
硬连接与原始文件必须在同一分区/文件系统

[root@svr7 ~]# rm -rf /opt/*
[root@svr7 ~]# echo 123456 > /opt/A
[root@svr7 ~]# cat /opt/A

[root@svr7 ~]# ln -s  /opt/A  /opt/B   #制作软连接
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# cat /opt/B

[root@svr7 ~]# ln  /opt/A   /opt/C  #制作硬连接
[root@svr7 ~]# ls  /opt/

[root@svr7 ~]# rm -rf /opt/A
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# cat /opt/B   #软连接不可用
[root@svr7 ~]# cat /opt/C   #硬连接可以使用

##################################################
获取命令帮助

[root@svr7 ~]# man 5 passwd  #5代表配置文件类型帮助信息

#################################################
zip归档工具,跨平台的压缩格式
• 归档+压缩操作
– zip [-r] 备份文件.zip 被归档的文档...
[root@svr7 ~]# yum -y install zip
[root@svr7 ~]# zip -r /opt/file.zip  /root/ /etc/passwd
[root@svr7 ~]# ls /opt

[root@svr7 ~]# zip -r /opt/nsd.zip  /boot/
[root@svr7 ~]# ls /opt
• 释放归档+解压操作
– unzip 备份文件.zip [-d 目标文件夹]
[root@svr7 ~]# yum -y install unzip 
[root@svr7 ~]# unzip /opt/nsd.zip -d /mnt/
[root@svr7 ~]# ls /mnt/
[root@svr7 ~]# ls /mnt/boot/

###################################################
自定义Yum源

1.具备从互联网下载一些软件包
[student@room9pc01 ~]$ ls /linux-soft/01/

2.将tools.tar.gz传递到虚拟机A 
[student@room9pc01 ~]$ scp /linux-soft/01/tools.tar.gz  root@192.168.4.7:/root/

3.在虚拟机A查看                                             
]# ls  /root
]# tar -xf /root/tools.tar.gz  -C  /
]# ls /
]# ls /tools/
]# ls /tools/other/

4.在虚拟机A生成仓库数据文件
[root@svr7 ~]# yum -y install createrepo
[root@svr7 ~]# createrepo /tools/other/

[root@svr7 ~]# ls /tools/other/
[root@svr7 ~]# ls /tools/other/repodata

5.书写客户端配置文件
[root@svr7 ~]# vim /etc/yum.repos.d/local.repo 
[local_repo]
name=CentOS-$releasever - Base
baseurl="ftp://192.168.4.254/centos-1804"
enabled=1
gpgcheck=0
[myrpm]
name=other rpm
baseurl=file:///tools/other  #指定为本机为Yum服务端
enabled=1
gpgcheck=0
[root@svr7 ~]# yum repolist 

[root@svr7 ~]# yum -y install cmatrix
[root@svr7 ~]# cmatrix
[root@svr7 ~]# cmatrix -C red

[root@svr7 ~]# yum -y install sl
[root@svr7 ~]# sl

[root@svr7 ~]# yum -y install oneko
[root@svr7 ~]# oneko
[root@svr7 ~]# oneko &   #将程序放入后台

################################################
vim编辑技巧
命令模式操作
[root@svr7 ~]# cp /etc/passwd  /opt/a.txt  
[root@svr7 ~]# vim /opt/a.txt 
光标跳转
	Home 键 或 ^、数字 0 	跳转到行首
	End 键 或“$”键 			跳转到行尾
	PgUp 键、PgDn 键 		向上翻页、向下翻页
	1G 或 gg 				跳转到文件的首行
	G 					跳转到文件的末尾行
复制/粘贴/删除
	复制 yy、3yy 			复制光标处的一行、3行
	粘贴 p、P 			粘贴到光标处之后、之前
	x 或 Delete键 			删除光标处的单个字符
	dd、#dd 				删除光标处的一行、#行
	d^ 					从光标处之前删除至行首
	d$或D(大写) 			从光标处删除到行尾
	C(大写) 				从光标处删除到行尾,进入插入模式

查找/撤销/保存
	/word 		向后查找字符串“word”
	n、N 		跳至后/前一个结果
	u 			撤销最近的一次操作
	U(大写) 		撤销对当前行的所有修改
	Ctrl + r 	取消前一次撤销操作
	ZZ(大写) 		保存修改并退出
##################################################
末行模式操作

    :r /etc/filesystems 读入其他文件内容

[root@svr7 ~]# echo 123456 > /opt/2.txt
[root@svr7 ~]# echo hahaxixi > /opt/3.txt
[root@svr7 ~]# vim /opt/3.txt
         :r  /opt/2.txt    #读入/opt/2.txt到当前文件
         :r  /etc/passwd   #读入/etc/passwd到当前文件


字符串替换
	:s/root/admin	替换当前行第一个“root”
	:s/root/admin/g 	替换当前行所有的“root”
	:1,10 s/root/admin/g 	替换第1-10行所有的“root”
	:% s/root/admin/g 	替换文件内所有的“root
[root@svr7 ~]# cat /etc/passwd > /opt/a.txt 
[root@svr7 ~]# vim /opt/a.txt


开关参数的控制

	:set nu或nonu  显示/不显示行号
	:set ai或noai  启用/关闭自动缩进
#################################################
源码编译安装

RPM包: rpm -ivh  yum -y install

源码包----gcc make---->可以执行的程序-------->运行安装

• 主要优点
– 获得软件的最新版,及时修复bug
– 软件功能可按需选择/定制,有更多软件可供选择     
– 源码包适用各种平台

                                                          
步骤一:安装gcc与make开发工具
[root@svr7 ~]# yum -y install gcc
[root@svr7 ~]# yum -y install make
步骤二:进行tar解包
]# tar -xf /tools/inotify-tools-3.13.tar.gz -C /
]# ls /
]# cd /inotify-tools-3.13/
]# ls
步骤三:运行configure脚本
           作用1:检测是否安装gcc
           作用2:可以选择软件的功能,也可以指定软件安装的路径
      --prefix=指定安装的位置
]# cd /inotify-tools-3.13/
]# ./configure   --prefix=/opt/myrpm


常见提示:没有安装gcc
checking for gcc... no
checking for cc... no
checking for cl.exe... no
configure: error: no acceptable C compiler found in $PATH
See `config.log' for more details.

步骤四:make编译生成可以执行的程序
]# cd /inotify-tools-3.13/
]# make

步骤五:make install将可以执行的程序运行安装
]# cd /inotify-tools-3.13/
]# make  install
]# ls /opt/
]# ls /opt/myrpm/
]# ls /opt/myrpm/bin/

##################################################






































